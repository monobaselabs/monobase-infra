{{- if .Values.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "hapihub.fullname" . }}
  namespace: {{ include "hapihub.namespace" . }}
  labels:
    {{- include "hapihub.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "hapihub.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "hapihub.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "hapihub.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      - name: {{ .Chart.Name }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - name: http
          containerPort: {{ .Values.service.targetPort }}
          protocol: TCP
        {{- if .Values.livenessProbe.enabled }}
        livenessProbe:
          {{- if .Values.livenessProbe.httpGet }}
          httpGet:
            path: {{ .Values.livenessProbe.httpGet.path }}
            port: {{ .Values.livenessProbe.httpGet.port | default "http" }}
          {{- end }}
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
        {{- end }}
        {{- if .Values.readinessProbe.enabled }}
        readinessProbe:
          {{- if .Values.readinessProbe.httpGet }}
          httpGet:
            path: {{ .Values.readinessProbe.httpGet.path }}
            port: {{ .Values.readinessProbe.httpGet.port | default "http" }}
          {{- end }}
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
        {{- end }}
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        env:
        # Set HOME to /tmp to avoid permission denied errors when running as non-root
        - name: HOME
          value: "/tmp"
        # Load from ConfigMap
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: {{ include "hapihub.fullname" . }}
              key: NODE_ENV
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: {{ include "hapihub.fullname" . }}
              key: LOG_LEVEL
        # Override HAPIHUB_PORT to prevent yargs from reading Kubernetes service discovery value
        # The CLI uses .env('HAPIHUB') which reads HAPIHUB_* env vars
        - name: HAPIHUB_PORT
          value: "7500"
        # MongoDB connection - load password from MongoDB chart's secret
        {{- if .Values.mongodb.enabled }}
        - name: MONGODB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-mongodb
              key: mongodb-root-password
        - name: DATABASE_URL
          value: {{ include "hapihub.mongodb.connectionString" . | quote }}
        {{- end }}
        # Service URLs from dependencies
        {{- if .Values.typesense.enabled }}
        - name: TYPESENSE_URL
          value: {{ include "hapihub.typesense.url" . | quote }}
        {{- end }}
        {{- if .Values.minio.enabled }}
        - name: S3_ENDPOINT
          value: {{ include "hapihub.minio.url" . | quote }}
        {{- end }}
        {{- if .Values.mailpit.enabled }}
        - name: SMTP_URL
          value: {{ include "hapihub.mailpit.url" . | quote }}
        {{- end }}
        # Load non-DB secrets from External Secrets Operator
        {{- if .Values.externalSecrets.enabled }}
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ include "hapihub.fullname" . }}-secrets
              key: JWT_SECRET
        - name: S3_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: {{ include "hapihub.fullname" . }}-secrets
              key: S3_ACCESS_KEY_ID
        - name: S3_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: {{ include "hapihub.fullname" . }}-secrets
              key: S3_SECRET_ACCESS_KEY
        {{- end }}
        # Additional environment variables from config
        {{- range $key, $value := .Values.config }}
        {{- if not (has $key (list "NODE_ENV" "LOG_LEVEL" "PORT")) }}
        - name: {{ $key }}
          value: {{ $value | quote }}
        {{- end }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
