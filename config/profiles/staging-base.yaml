# Staging Base Profile
# Comprehensive staging defaults optimized for testing and validation
# Lower resource requirements than production

# Instructions:
# 1. Copy this file to config/yourclient/values-staging.yaml
# 2. Change global.domain and global.namespace
# 3. Override only the values you need to change

global:
  domain: CHANGEME.com  # ⚠️ REQUIRED: Change to client domain
  namespace: CHANGEME-staging  # ⚠️ REQUIRED: Change to client namespace
  environment: staging

  gateway:
    name: shared-gateway
    namespace: gateway-system

  storage:
    provider: cloud-default
    className: ""

# ===== CORE: Monobase API =====
api:
  enabled: true

  image:
    repository: ghcr.io/YOUR-ORG/monobase-api
    tag: "latest"  # OK for staging (use branch builds)
    pullPolicy: Always  # Always pull latest for staging

  replicas: 1  # Single replica for staging

  resources:
    requests:
      cpu: 250m
      memory: 512Mi
    limits:
      cpu: 1
      memory: 2Gi

  gateway:
    hostname: ""  # Empty = uses api.{global.domain}

  livenessProbe:
    enabled: true
    path: /health
    initialDelaySeconds: 30
    periodSeconds: 10

  readinessProbe:
    enabled: true
    path: /ready
    initialDelaySeconds: 10
    periodSeconds: 5

  podDisruptionBudget:
    enabled: false  # Not needed for single replica

  autoscaling:
    enabled: false  # Disabled for staging

# ===== CORE: Monobase Account Frontend =====
account:
  enabled: true

  image:
    repository: ghcr.io/YOUR-ORG/monobase-account
    tag: "latest"
    pullPolicy: Always

  replicas: 1

  resources:
    requests:
      cpu: 100m
      memory: 256Mi
    limits:
      cpu: 500m
      memory: 512Mi

  gateway:
    hostname: ""

  podDisruptionBudget:
    enabled: false

# ===== CORE: PostgreSQL Database =====
postgresql:
  enabled: true

  # Staging uses standalone mode (no replication)
  architecture: standalone
  replicaCount: 1

  auth:
    enabled: true

  persistence:
    enabled: true
    storageClass: ""
    size: 20Gi  # Smaller for staging

  resources:
    requests:
      cpu: 500m
      memory: 2Gi
    limits:
      cpu: 2
      memory: 4Gi

# ===== OPTIONAL: Valkey (Redis Cache) =====
valkey:
  enabled: true

  architecture: standalone  # No replication for staging

  master:
    persistence:
      enabled: false  # Disabled for staging (faster cleanup)

  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 250m
      memory: 256Mi

# ===== OPTIONAL: MinIO (Object Storage) =====
minio:
  enabled: false  # Usually disabled (use cloud S3)

# ===== STAGING: Mailpit Enabled =====
mailpit:
  enabled: true  # ✅ Enable for email testing

  resources:
    requests:
      cpu: 50m
      memory: 50Mi
    limits:
      cpu: 200m
      memory: 200Mi

  gateway:
    hostname: mail.{global.domain}  # Web UI for viewing test emails

# ===== External Secrets =====
externalSecrets:
  enabled: true
  provider: aws

# ===== Monitoring =====
monitoring:
  enabled: false  # Usually disabled to save resources

# ===== Backup =====
backup:
  enabled: false  # Usually disabled for staging

# ===== Security =====
networkPolicies:
  enabled: true  # Always enabled for security
  defaultDeny: true

podSecurityStandards:
  enabled: true
  level: restricted

# ===== Resource Quotas =====
resourceQuotas:
  enabled: false
