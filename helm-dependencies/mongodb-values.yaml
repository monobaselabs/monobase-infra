# Bitnami MongoDB Helm Chart Configuration
# Chart: https://github.com/bitnami/charts/tree/main/bitnami/mongodb
# Version: 15.6.13

# These values override the Bitnami MongoDB defaults
# Reference: https://artifacthub.io/packages/helm/bitnami/mongodb

# Architecture: replicaset for HA, standalone for dev/staging
architecture: replicaset
replicaCount: 3

# Authentication
auth:
  enabled: true
  rootUser: root
  # Passwords from External Secrets
  existingSecret: mongodb-credentials
  userDatabase: hapihub
  username: hapihub

# Persistence
persistence:
  enabled: true
  storageClass: longhorn
  size: 100Gi
  accessModes:
    - ReadWriteOnce

# Resource limits
resources:
  requests:
    cpu: 1.5
    memory: 6Gi
  limits:
    cpu: 3
    memory: 8Gi

# Replica set configuration
replicaSetName: rs0
replicaSetKey: ""  # From External Secrets

# Encryption at rest (HIPAA requirement)
# Note: Use Longhorn encrypted StorageClass for volume encryption
# MongoDB Enterprise has built-in encryption, Community edition relies on volume encryption

# TLS/SSL configuration
tls:
  enabled: true
  # Certificates from cert-manager or External Secrets
  existingSecret: mongodb-tls
  # Bitnami chart will configure MongoDB to require TLS connections

# Monitoring
metrics:
  enabled: true
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 200m
      memory: 256Mi
  
  # ServiceMonitor for Prometheus
  serviceMonitor:
    enabled: false  # Enable when monitoring is enabled
    interval: 30s

# Backup configuration
# Note: Bitnami MongoDB chart doesn't include built-in backup CronJobs
# Use Velero for Kubernetes-native backups (recommended)
# See: infrastructure/velero/backup-schedules/
#
# For application-level backups, create a separate CronJob using mongodump

# Arbiter (not recommended for production, use 3+ data-bearing nodes)
arbiter:
  enabled: false

# Pod Disruption Budget
podDisruptionBudget:
  create: true
  minAvailable: 2  # At least 2 replicas always available

# Security Context
podSecurityContext:
  enabled: true
  fsGroup: 1001
  runAsUser: 1001
  runAsNonRoot: true

containerSecurityContext:
  enabled: true
  runAsUser: 1001
  runAsNonRoot: true
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL

# Network Policy
networkPolicy:
  enabled: true
  allowExternal: false
  # Only allow traffic from HapiHub, Syncd
  ingress:
    - from:
      - podSelector:
          matchLabels:
            app.kubernetes.io/name: hapihub
      - podSelector:
          matchLabels:
            app.kubernetes.io/name: syncd
      ports:
      - protocol: TCP
        port: 27017

# Affinity - spread replicas across nodes
affinity:
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
            - key: app.kubernetes.io/name
              operator: In
              values:
                - mongodb
        topologyKey: kubernetes.io/hostname

# Init containers (for initialization tasks)
initContainers: []

# Sidecars
sidecars: []

# Custom configuration (using Bitnami chart's configuration field)
# Bitnami MongoDB supports custom mongod.conf via 'configuration' field
configuration: |-
  storage:
    wiredTiger:
      engineConfig:
        cacheSizeGB: 4
  net:
    maxIncomingConnections: 1000

# HIPAA-specific settings
# - Encryption at rest: enabled
# - TLS/SSL: requireTLS
# - Authentication: required
# - Audit logging: configure via configuration
