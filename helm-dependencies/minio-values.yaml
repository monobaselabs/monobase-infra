# Bitnami MinIO Helm Chart Configuration
# Chart: https://github.com/bitnami/charts/tree/main/bitnami/minio
# Version: 14.7.12

# These values override the Bitnami MinIO defaults
# Reference: https://artifacthub.io/packages/helm/bitnami/minio

# Deployment mode: distributed for HA, standalone for dev/staging
mode: distributed
statefulset:
  replicaCount: 6  # 6 nodes for 1TB usable with EC:2 erasure coding
  zones: 1
  drivesPerNode: 1

# Authentication
auth:
  rootUser: admin
  # Root password from External Secrets
  existingSecret: minio-credentials

# Persistence - per node storage
persistence:
  enabled: true
  storageClass: longhorn
  size: 250Gi  # 6 × 250Gi = 1.5TB raw → ~1TB usable (EC:2)
  accessModes:
    - ReadWriteOnce

# Resource limits
resources:
  requests:
    cpu: 1.5
    memory: 3Gi
  limits:
    cpu: 3
    memory: 6Gi

# Service configuration
service:
  type: ClusterIP
  ports:
    api: 9000      # S3 API
    console: 9001  # MinIO Console (admin UI)

# Gateway API routing (via HTTPRoute in parent chart)
# MinIO Console accessible via storage.{domain}/console
# S3 API accessible via storage.{domain}

# TLS configuration
tls:
  enabled: true
  # Certificates from cert-manager or External Secrets
  existingSecret: minio-tls

# Ingress (NOT USED - we use Gateway API)
ingress:
  enabled: false

# Default buckets to create
# Note: Bitnami MinIO chart doesn't support defaultBuckets parameter
# Create buckets post-deployment using:
# - MinIO Console UI
# - mc command: mc mb myminio/hapihub-files
# - Kubernetes Job with mc commands
# Required buckets: hapihub-files, hapihub-backups, mycureapp-assets

# Monitoring
metrics:
  serviceMonitor:
    enabled: false  # Enable when monitoring is enabled
    interval: 30s
    path: /minio/v2/metrics/cluster

# Security Context
podSecurityContext:
  enabled: true
  fsGroup: 1001
  runAsUser: 1001
  runAsNonRoot: true

containerSecurityContext:
  enabled: true
  runAsUser: 1001
  runAsNonRoot: true
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL

# Network Policy
networkPolicy:
  enabled: true
  allowExternal: false
  # Allow traffic from HapiHub and Gateway
  ingress:
    - from:
      - podSelector:
          matchLabels:
            app.kubernetes.io/name: hapihub
      - namespaceSelector:
          matchLabels:
            name: gateway-system
      ports:
      - protocol: TCP
        port: 9000

# Pod Disruption Budget
podDisruptionBudget:
  create: true
  minAvailable: 4  # At least 4 of 6 nodes (for EC:2)

# Affinity - spread across nodes
affinity:
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
            - key: app.kubernetes.io/name
              operator: In
              values:
                - minio
        topologyKey: kubernetes.io/hostname

# Lifecycle policies (retention, archival)
# Note: Configure post-deployment via MinIO Console or mc command
# Not a Helm chart parameter - managed via MinIO API
# Example: mc ilm add --expiry-days 365 myminio/temporary-files

# Replication (for multi-region)
# Note: Configure via MinIO site replication
# Not managed by Helm chart

# Erasure coding configuration
# EC:2 means 2 parity drives (4 data + 2 parity = 6 total)
# Can tolerate 2 node failures
# Storage efficiency: ~66% (1TB usable from 1.5TB raw)

# For different configurations:
# - 4 nodes EC:2 → 2 data + 2 parity (50% efficient, 2 failure tolerance)
# - 6 nodes EC:2 → 4 data + 2 parity (66% efficient, 2 failure tolerance)
# - 8 nodes EC:4 → 4 data + 4 parity (50% efficient, 4 failure tolerance)

# CORS and environment configuration
# Use extraEnvVars for Bitnami chart
extraEnvVars:
  - name: MINIO_BROWSER_REDIRECT_URL
    value: "https://storage.example.com/console"  # Update per client
  - name: MINIO_API_CORS_ALLOW_ORIGIN
    value: "https://app.example.com"  # Update per client

# For external S3 (AWS, GCS, Azure Blob) instead of self-hosted:
# Set minio.enabled: false in values and configure HapiHub with:
# - S3_ENDPOINT: s3.amazonaws.com
# - S3_BUCKET: your-bucket-name
# - S3_REGION: us-east-1
# - S3_PUBLIC_URL: https://your-cdn.com (optional)
