# GCP Secret Manager SecretStore
# Template - replace {{ .Values.* }} with actual values

apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: {{ .Values.global.namespace }}-secretstore
  namespace: {{ .Values.global.namespace }}
spec:
  provider:
    gcpsm:
      projectID: {{ .Values.externalSecrets.gcp.projectId }}
      
      # Authentication via Workload Identity (recommended for GKE)
      auth:
        workloadIdentity:
          clusterLocation: {{ .Values.externalSecrets.gcp.clusterLocation | default "us-central1" }}
          clusterName: {{ .Values.externalSecrets.gcp.clusterName }}
          serviceAccountRef:
            name: {{ .Values.externalSecrets.serviceAccount | default "default" }}

---
# ServiceAccount with Workload Identity annotation
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Values.externalSecrets.serviceAccount | default "default" }}
  namespace: {{ .Values.global.namespace }}
  annotations:
    iam.gke.io/gcp-service-account: {{ .Values.externalSecrets.gcp.gcpServiceAccount }}

---
# GCP Setup Instructions:
#
# 1. Enable Secret Manager API:
#    gcloud services enable secretmanager.googleapis.com
#
# 2. Create GCP Service Account:
#    gcloud iam service-accounts create external-secrets-sa \
#      --project=my-project
#
# 3. Grant Secret Manager access:
#    gcloud projects add-iam-policy-binding my-project \
#      --member="serviceAccount:external-secrets-sa@my-project.iam.gserviceaccount.com" \
#      --role="roles/secretmanager.secretAccessor"
#
# 4. Configure Workload Identity:
#    gcloud iam service-accounts add-iam-policy-binding \
#      external-secrets-sa@my-project.iam.gserviceaccount.com \
#      --role roles/iam.workloadIdentityUser \
#      --member "serviceAccount:my-project.svc.id.goog[myclient-prod/default]"
#
# 5. Create secrets in Secret Manager:
#    echo -n "SecurePassword123!" | gcloud secrets create mongodb-root-password \
#      --data-file=- --project=my-project
#
# 6. Create SecretStore and ExternalSecret resources

---
# Example ExternalSecret:
#
# apiVersion: external-secrets.io/v1beta1
# kind: ExternalSecret
# metadata:
#   name: mongodb-credentials
#   namespace: myclient-prod
# spec:
#   secretStoreRef:
#     name: myclient-prod-secretstore
#     kind: SecretStore
#   target:
#     name: mongodb-credentials
#   data:
#     - secretKey: root-password
#       remoteRef:
#         key: mongodb-root-password
#         version: latest
#     - secretKey: replica-set-key
#       remoteRef:
#         key: mongodb-replica-set-key
#         version: latest

---
# Secret naming in GCP Secret Manager:
# Use hyphens for readability
# Examples:
# - mongodb-root-password
# - api-jwt-secret
# - minio-access-key
#
# Full resource name format:
# projects/PROJECT_ID/secrets/SECRET_NAME/versions/VERSION
