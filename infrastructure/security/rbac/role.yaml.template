# RBAC Roles (Least Privilege)
# Minimal permissions per service

---
# HapiHub Role (read-only access to ConfigMaps and Secrets)
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: hapihub
  namespace: {{ .Values.global.namespace }}
rules:
  # Read ConfigMaps
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get", "list", "watch"]
  
  # Read Secrets
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "watch"]
  
  # Read own service
  - apiGroups: [""]
    resources: ["services"]
    resourceNames: ["hapihub"]
    verbs: ["get"]

---
# Syncd Role
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: syncd
  namespace: {{ .Values.global.namespace }}
rules:
  - apiGroups: [""]
    resources: ["configmaps", "secrets"]
    verbs: ["get", "list", "watch"]

---
# MyCureApp Role (minimal - static frontend)
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: mycureapp
  namespace: {{ .Values.global.namespace }}
rules:
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get", "list"]

---
# External Secrets Role (manage secrets)
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: external-secrets
  namespace: {{ .Values.global.namespace }}
rules:
  # Create and manage secrets
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  
  # Watch ExternalSecrets CRDs
  - apiGroups: ["external-secrets.io"]
    resources: ["externalsecrets", "secretstores"]
    verbs: ["get", "list", "watch"]
  
  # Update ExternalSecret status
  - apiGroups: ["external-secrets.io"]
    resources: ["externalsecrets/status"]
    verbs: ["get", "update", "patch"]

---
# Notes:
# 1. Roles are namespace-scoped (not cluster-wide)
# 2. Only permissions actually needed are granted
# 3. No wildcard permissions (*)
# 4. No write access to most resources
# 5. Service accounts bound via RoleBindings
#
# For debugging, you can temporarily add permissions:
# - apiGroups: [""]
#   resources: ["pods", "pods/log"]
#   verbs: ["get", "list"]
